<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ClassSystem.mapper.StudentMapper">

    <!--返回学生列表多少行（page）-->
    <select id="StudentTotalCount"  resultType="int">
        select count(1) from t_user where roleid=3;
    </select>

    <!--获取学生列表-->
    <select id="StudentList" parameterType="PageHelp" resultType="User">
        select * from t_user where roleid=3 limit #{start},#{end};
    </select>

    <!--查询框查询学生-->
    <select id="searchStudent" parameterType="User" resultType="User">
        select * from t_user where roleid=3
        <if test="username!=null">
            and (username = #{username} or username like concat('%',#{username},'%'))
        </if>
        <if test="name!=null">
            and (name = #{name} or name like concat('%',#{name},'%'))
        </if>
        <if test="dorm!=null">
            and (dorm = #{dorm} or dorm like concat('%',#{dorm},'%'))
        </if>
        <if test="classname!=null">
            and (classname = #{classname} or classname like concat('%',#{classname},'%'))
        </if>
        limit #{start},#{end};
    </select>

    <!--返回多少行（page）学生-->
    <select id="searchStudentTotal" parameterType="User" resultType="int">
        select count(1) from t_user where roleid=3
        <if test="username!=null">
            and (username = #{username} or username like concat('%',#{username},'%'))
        </if>
        <if test="name!=null">
            and (name = #{name} or name like concat('%',#{name},'%'))
        </if>
        <if test="dorm!=null">
            and (dorm = #{dorm} or dorm like concat('%',#{dorm},'%'))
        </if>
        <if test="classname!=null">
            and (classname = #{classname} or classname like concat('%',#{classname},'%'))
        </if>
    </select>

    <!-- 添加学生信息 -->
    <insert id="addStudent" parameterType="User">
        insert into t_user (username,name,password,phone,dorm,address,classname,roleid)
        value (#{username}, #{name},#{password},#{phone},#{dorm},#{address},#{classname},3)
    </insert>

    <!-- 修改学生信息 -->
    <update id="updateStudent" parameterType="User">
        update t_user set
        name=#{name},password=#{password},phone=#{phone},dorm=#{dorm},address=#{address},classname=#{classname}
        where username =#{username}
    </update>

    <!-- 根据UserName删除学生信息 -->
    <delete id="DeleteStudent" parameterType="User">
        delete from t_user where username=#{username}
    </delete>

</mapper>